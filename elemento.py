PARED = 'ðŸ§±'  # sÃ­mbolo de pared 
CAJA = 'ðŸ“¦'   # sÃ­mbolo de caja
DESTINO = 'â­•'  # sÃ­mbolo de destino
JUGADOR = 'ðŸ™‚'  # sÃ­mbolo de jugador
ESP_VAC = ' ðŸ•¸'  # espacio vacÃ­o 
CAJ_DEST = 'ðŸŽ²'  # caja en destino
JUG_DEST = 'ðŸ‘©'  # jugador en destino

tablero = (
    [PARED, PARED, PARED, PARED, PARED, PARED, PARED],
    [PARED, ESP_VAC, ESP_VAC, DESTINO, ESP_VAC, ESP_VAC, PARED],
    [PARED, ESP_VAC, ESP_VAC, CAJA, DESTINO, ESP_VAC, PARED],
    [PARED, ESP_VAC, ESP_VAC, JUGADOR, ESP_VAC, ESP_VAC, PARED],
    [PARED, PARED, CAJA, ESP_VAC, PARED, PARED, PARED],
    [PARED, ESP_VAC, ESP_VAC, ESP_VAC, ESP_VAC, ESP_VAC, PARED],
    [PARED, PARED, PARED, PARED, PARED, PARED, PARED],
)

# DefiniciÃ³n de sÃ­mbolos
PARED = 'ðŸ§±'  # sÃ­mbolo de pared lleno
CAJA = 'ðŸ“¦'   # sÃ­mbolo de caja
DESTINO = 'â­•'  # sÃ­mbolo de destino, como una bandera
JUGADOR = 'ðŸ™‚'  # sÃ­mbolo de jugador, como una cara
ESP_VAC = 'ðŸ•¸'  # espacio vacÃ­o sin punto
CAJ_DEST = 'ðŸŽ²'  # caja en destino
JUG_DEST = 'ðŸ‘©'  # jugador en destino

def leer_tablero(nivel):
    tablero = []
    seccion = ''
    variables = {}

    # Abrir el archivo del nivel
    with open(f'{nivel}.elemento', 'r') as f:
        lineas = f.readlines()

        for linea in lineas:
            # Quitar el Ãºltimo carÃ¡cter (como \n) y espacios adicionales
            linea = linea[:-1].strip()

            if linea in ('', '\n'):
                continue  # Ignorar lÃ­neas vacÃ­as
            if linea in ('# VARIABLES', '# TABLERO'):
                seccion = linea
                continue

            if seccion == '# VARIABLES':
                # Leer las definiciones de variables
                linea = linea.split('=')
                var = linea[0].strip()
                tipo = linea[1].strip()
                
                # Mapear las variables al sÃ­mbolo correspondiente
                if tipo == 'ESPACIO':
                    tipo = ESP_VAC
                elif tipo == 'JUGADOR':
                    tipo = JUGADOR
                elif tipo == 'MURO':
                    tipo = PARED
                elif tipo == 'CAJA':
                    tipo = CAJA
                elif tipo == 'DESTINO':
                    tipo = DESTINO
                elif tipo == 'CAJ_DEST':
                    tipo = CAJ_DEST
                elif tipo == 'JUG_DEST':
                    tipo = JUG_DEST

                variables[var] = tipo

            elif seccion == '# TABLERO':
                # Reemplazar las variables con sus sÃ­mbolos en el tablero
                for var, tipo in variables.items():
                    linea = linea.replace(var, tipo)

                # Convertir la lÃ­nea en una lista de caracteres y agregarla al tablero
                linea = list(linea)
                tablero.append(list(linea))

    return tablero

if __name__ == '__main__':
    # Solo invoca la funciÃ³n si necesitas usar el tablero mÃ¡s adelante
    tablero = leer_tablero('nivel_1')
